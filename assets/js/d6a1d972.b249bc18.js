"use strict";(self.webpackChunkappsmith_docs=self.webpackChunkappsmith_docs||[]).push([[5686],{3905:(t,e,o)=>{o.d(e,{Zo:()=>l,kt:()=>d});var r=o(67294);function n(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}function i(t,e){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),o.push.apply(o,r)}return o}function a(t){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?i(Object(o),!0).forEach((function(e){n(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))}))}return t}function c(t,e){if(null==t)return{};var o,r,n=function(t,e){if(null==t)return{};var o,r,n={},i=Object.keys(t);for(r=0;r<i.length;r++)o=i[r],e.indexOf(o)>=0||(n[o]=t[o]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)o=i[r],e.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(t,o)&&(n[o]=t[o])}return n}var p=r.createContext({}),s=function(t){var e=r.useContext(p),o=e;return t&&(o="function"==typeof t?t(e):a(a({},e),t)),o},l=function(t){var e=s(t.components);return r.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var o=t.components,n=t.mdxType,i=t.originalType,p=t.parentName,l=c(t,["components","mdxType","originalType","parentName"]),m=s(o),d=n,f=m["".concat(p,".").concat(d)]||m[d]||u[d]||i;return o?r.createElement(f,a(a({ref:e},l),{},{components:o})):r.createElement(f,a({ref:e},l))}));function d(t,e){var o=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=o.length,a=new Array(i);a[0]=m;var c={};for(var p in e)hasOwnProperty.call(e,p)&&(c[p]=e[p]);c.originalType=t,c.mdxType="string"==typeof t?t:n,a[1]=c;for(var s=2;s<i;s++)a[s]=o[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,o)}m.displayName="MDXCreateElement"},66009:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var r=o(87462),n=(o(67294),o(3905));const i={sidebar_position:2},a="Import from Repository",c={unversionedId:"advanced-concepts/version-control-with-git/import-from-repository",id:"advanced-concepts/version-control-with-git/import-from-repository",title:"Import from Repository",description:"Import Apps from Git",source:"@site/docs/advanced-concepts/version-control-with-git/import-from-repository.md",sourceDirName:"advanced-concepts/version-control-with-git",slug:"/advanced-concepts/version-control-with-git/import-from-repository",permalink:"/advanced-concepts/version-control-with-git/import-from-repository",draft:!1,editUrl:"https://github.com/bucketclan/appsmith-docs/blob/v1.5/website/docs/advanced-concepts/version-control-with-git/import-from-repository.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Connecting to Git Repository",permalink:"/advanced-concepts/version-control-with-git/connecting-to-git-repository"},next:{title:"Commit and Push",permalink:"/advanced-concepts/version-control-with-git/commit-and-push"}},p={},s=[],l={toc:s};function u(t){let{components:e,...o}=t;return(0,n.kt)("wrapper",(0,r.Z)({},l,o,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"import-from-repository"},"Import from Repository"),(0,n.kt)("figure",null,(0,n.kt)("object",{data:"https://www.youtube.com/embed/B4gR4XligTo",width:"750px",height:"400px"}),(0,n.kt)("figcaption",{align:"center"},(0,n.kt)("i",null,"Import Apps from Git"))),(0,n.kt)("p",null,"\u200bIf you already have an Appsmith App in a Git repository, you can import it to a new workspace or a different Appsmith account. Follow the steps given below:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"On the Appsmith workspace home, click on desired workspace's Menu button and select Import."),(0,n.kt)("li",{parentName:"ul"},"Choose the ",(0,n.kt)("inlineCode",{parentName:"li"},"Import from a Git repo")," option on the import application pop-up. You'll be navigated to an ",(0,n.kt)("inlineCode",{parentName:"li"},"Import from the Git Repository")," screen."),(0,n.kt)("li",{parentName:"ul"},"Add your Repository\u2019s SSH URL and click on ",(0,n.kt)("a",{parentName:"li",href:"/advanced-concepts/version-control-with-git/connecting-to-git-repository#generating-a-deploy-key"},"Generate key"),".")),(0,n.kt)("figure",null,(0,n.kt)("object",{data:"https://www.youtube.com/embed/zrxgcI3m2lc",width:"750px",height:"400px"}),(0,n.kt)("figcaption",{align:"center"},(0,n.kt)("i",null,"Version Control with Git"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Add the ",(0,n.kt)("a",{parentName:"li",href:"/advanced-concepts/version-control-with-git/connecting-to-git-repository#adding-the-deploy-key-in-the-repository"},"Deploy key to your repository."),"\u200b"),(0,n.kt)("li",{parentName:"ul"},"Go back to the Git connection window and ",(0,n.kt)("a",{parentName:"li",href:"/advanced-concepts/version-control-with-git/connecting-to-git-repository#user-configurations"},"configure the user settings")," and click on ",(0,n.kt)("strong",{parentName:"li"},"Import.")),(0,n.kt)("li",{parentName:"ul"},"Once the import is complete, you\u2019ll see a data source configuration modal where you can configure the data sources used by the imported Application. We do not export any configuration values used for connecting a data source. So either you have to configure it in the data source configuration modal, or you can skip this and choose to configure it later.")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},'If the imported workspace already has a data source with the same name but a different type, the import will fail due to name conflicts. For example, suppose a git-connected application has a MongoDB data source - "movies." You are importing it to a workspace that has a Postgres data source also named "movies". In such a case, the import will fail.')))}u.isMDXComponent=!0}}]);