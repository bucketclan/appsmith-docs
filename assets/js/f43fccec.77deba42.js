"use strict";(self.webpackChunkappsmith_docs=self.webpackChunkappsmith_docs||[]).push([[3932],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>h});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(a),h=o,m=u["".concat(l,".").concat(h)]||u[h]||c[h]||r;return a?n.createElement(m,i(i({ref:t},d),{},{components:a})):n.createElement(m,i({ref:t},d))}));function h(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<r;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},61101:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var n=a(87462),o=(a(67294),a(3905));const r={},i="JS Objects",s={unversionedId:"core-concepts/writing-code/javascript-editor-beta/README",id:"core-concepts/writing-code/javascript-editor-beta/README",title:"JS Objects",description:"Writing extensive code without a full-fledge editor could be challenging. The JavaScript Editor(beta) in Appsmith allows you to create a reusable set of JavaScript functions that you can call within JavaScript bindings across a Page\u2019s component to write complex code with ease. In Appsmith, it\u2019s referred to as JS Objects.",source:"@site/docs/core-concepts/writing-code/javascript-editor-beta/README.md",sourceDirName:"core-concepts/writing-code/javascript-editor-beta",slug:"/core-concepts/writing-code/javascript-editor-beta/",permalink:"/core-concepts/writing-code/javascript-editor-beta/",draft:!1,editUrl:"https://github.com/bucketclan/appsmith-docs/blob/v1.5/website/docs/core-concepts/writing-code/javascript-editor-beta/README.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Writing Code",permalink:"/core-concepts/writing-code/"},next:{title:"Asynchronous JavaScript Function Settings",permalink:"/core-concepts/writing-code/javascript-editor-beta/asynchronous-javascript-function-settings"}},l={},p=[{value:"JS Object",id:"js-object",level:3},{value:"Calling a JS Object Function",id:"calling-a-js-object-function",level:2},{value:"Types of JS Functions",id:"types-of-js-functions",level:2},{value:"Synchronous",id:"synchronous",level:3},{value:"Asynchronous",id:"asynchronous",level:3},{value:"Working with JavaScript Editor",id:"working-with-javascript-editor",level:2},{value:"Response Tab",id:"response-tab",level:3},{value:"Execute Function",id:"execute-function",level:4},{value:"Linting Errors",id:"linting-errors",level:3},{value:'Errors Tab <a href="#errors-tab" id="errors-tab"></a>',id:"errors-tab-",level:3},{value:"Logs Tab",id:"logs-tab",level:3},{value:"Snippets",id:"snippets",level:3},{value:"Appsmith Snippet Library",id:"appsmith-snippet-library",level:4},{value:"Debugger Statements",id:"debugger-statements",level:3},{value:"Writing Complex Code",id:"writing-complex-code",level:2},{value:"Use case",id:"use-case",level:3},{value:"Code Workflow",id:"code-workflow",level:4},{value:"Current Limitations",id:"current-limitations",level:2}],d={toc:p};function c(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"js-objects"},"JS Objects"),(0,o.kt)("p",null,"Writing extensive code without a full-fledge editor could be challenging. The JavaScript Editor(beta) in Appsmith allows you to create a reusable set of JavaScript functions that you can call within JavaScript bindings across a Page\u2019s component to write complex code with ease. In Appsmith, it\u2019s referred to as ",(0,o.kt)("inlineCode",{parentName:"p"},"JS Objects"),"."),(0,o.kt)("figure",null,(0,o.kt)("object",{data:"https://www.youtube.com/embed/tpbY5Jti9d4?autoplay=0",width:"750px",height:"400px"}),(0,o.kt)("figcaption",{align:"center"},(0,o.kt)("i",null,"How to build with JS Editor"))),(0,o.kt)("h3",{id:"js-object"},"JS Object"),(0,o.kt)("p",null,"A JS Object is an entity comprised of multiple functions and variables. It is a reusable component you can refer to in other JS Objects, allowing you to create a neatly organized set of hierarchies."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"How to Create a JS Object?")),(0,o.kt)("p",null,"You can create new JS Objects from the Entity Explorer."),(0,o.kt)("p",null,"Navigate to ",(0,o.kt)("strong",{parentName:"p"},"Entity Explorer")," >> Click (+) next to ",(0,o.kt)("strong",{parentName:"p"},"Queries/JS")," >> Select ",(0,o.kt)("strong",{parentName:"p"},"New JS Object"),"."),(0,o.kt)("figure",null,(0,o.kt)("object",{data:"https://www.youtube.com/embed/8kzyYaHnwPw?autoplay=0",width:"750px",height:"400px"}),(0,o.kt)("figcaption",{align:"center"},(0,o.kt)("i",null,"How to add a JS Object?"))),(0,o.kt)("p",null,"The screen below shows a JS Object added to the page. The default code template that supports ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/web/javascript/reference/statements/export"},"export default"),"."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"When you add a new JS Object",src:a(13104).Z,width:"3024",height:"942"})),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Give a meaningful name to the JSObject"),(0,o.kt)("li",{parentName:"ol"},"Code editor where you can write JavaScript Code"),(0,o.kt)("li",{parentName:"ol"},"Settings are available for ",(0,o.kt)("a",{parentName:"li",href:"./#asynchronous"},"Async functions")," only."),(0,o.kt)("li",{parentName:"ol"},"Define variables"),(0,o.kt)("li",{parentName:"ol"},"Define functions"),(0,o.kt)("li",{parentName:"ol"},"Use the editor to do several jobs, to name a few:",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"Write your code"),(0,o.kt)("li",{parentName:"ol"},"Call in-built or user-defined functions"),(0,o.kt)("li",{parentName:"ol"},"API calls"),(0,o.kt)("li",{parentName:"ol"},"Database query execution"))),(0,o.kt)("li",{parentName:"ol"},"Add multiple functions to the JS Object"),(0,o.kt)("li",{parentName:"ol"},"Access JS Objects from Explorer available under JS Objects Group")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The support for the named ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/web/javascript/reference/statements/export"},"exports")," is not available for exporting functions. However, you can expose functions that are part of the JS Object using ",(0,o.kt)("strong",{parentName:"p"},"default")," export.")),(0,o.kt)("h2",{id:"calling-a-js-object-function"},"Calling a JS Object Function"),(0,o.kt)("p",null,"You can call the functions defined in a JS Object by using the notation ",(0,o.kt)("inlineCode",{parentName:"p"},"{{ JS_OBJECT_NAME.Function_Name }}")," embedded in a mustache sign as shown in the figure below:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"How to call a function defined in a JS Object?",src:a(90596).Z,width:"512",height:"251"})),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The JS Objects defined are available across APIs, Queries, or other JS Objects defined for ",(0,o.kt)("strong",{parentName:"p"},"a particular page,")," i.e., the JS Objects have ",(0,o.kt)("strong",{parentName:"p"},"page-level access")," and are ",(0,o.kt)("strong",{parentName:"p"},"not")," accessible ",(0,o.kt)("strong",{parentName:"p"},"across pages"),".")),(0,o.kt)("h2",{id:"types-of-js-functions"},"Types of JS Functions"),(0,o.kt)("p",null,"You can write different types of functions in a JS Object that can be ",(0,o.kt)("strong",{parentName:"p"},"Synchronous")," or ",(0,o.kt)("strong",{parentName:"p"},"Asynchronous"),"."),(0,o.kt)("h3",{id:"synchronous"},"Synchronous"),(0,o.kt)("p",null,"As the name suggests, synchronous means to be in a sequence, i.e., every statement of the code gets executed one by one. So, a statement must wait for the earlier statement to complete its execution."),(0,o.kt)("p",null,"For example, the below code snippet shows a data filter:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Api.data.filter(() => {}); // filtering data \n")),(0,o.kt)("p",null,"Here data filtering is the process of selecting a subset of data you want to choose for viewing or analysis. To filter the data, you must traverse the whole dataset one after the other and segregate it if it matches the filter criteria. Thus, you need synchronous execution."),(0,o.kt)("h3",{id:"asynchronous"},"Asynchronous"),(0,o.kt)("p",null,"The word asynchronous means not occurring at the same time. You may sometimes need to fetch data from the server or execute a function with a delay, something you do not anticipate occurring at the current time."),(0,o.kt)("p",null,"For example, ",(0,o.kt)("inlineCode",{parentName:"p"},"Promises"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Api.run()"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"Query.Run()"),", Appsmith platform functions(eg. ",(0,o.kt)("inlineCode",{parentName:"p"},"showModal"),"). It basically lets you delay the execution of code embedded in an async function and is executed when needed."),(0,o.kt)("p",null,"You can ",(0,o.kt)("a",{parentName:"p",href:"/core-concepts/writing-code/javascript-editor-beta/asynchronous-javascript-function-settings"},"configure additional settings for the asynchronous function")," and enhance the user experience."),(0,o.kt)("h2",{id:"working-with-javascript-editor"},"Working with JavaScript Editor"),(0,o.kt)("p",null,"JavaScript Editor is an extensive editor that provides additional functionalities while writing code. You can do a lot with it, like:"),(0,o.kt)("figure",null,(0,o.kt)("object",{data:"https://www.youtube.com/embed/agyvQNFGGIY?autoplay=0",width:"750px",height:"400px"}),(0,o.kt)("figcaption",{align:"center"},(0,o.kt)("i",null,"A quick walkthrough of JavaScript Editor"))),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"th"},"What do you get?")),(0,o.kt)("th",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"th"},"Description")))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Response Tab")),(0,o.kt)("td",{parentName:"tr",align:null},"Execute each function at the time of development and view the output in the Response tab")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Linting Errors")),(0,o.kt)("td",{parentName:"tr",align:null},"Get the linting errors caught right in the editor")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Errors Tab")),(0,o.kt)("td",{parentName:"tr",align:null},"Check for the syntax errors in the Errors tab")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Logs Tab")),(0,o.kt)("td",{parentName:"tr",align:null},"Check the function execution log in the Logs tab")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Snippets")),(0,o.kt)("td",{parentName:"tr",align:null},"Insert ready-to-use snippets")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Debugger Statements")),(0,o.kt)("td",{parentName:"tr",align:null},"Use debugger statements to pause the execution")))),(0,o.kt)("p",null,"To understand how JavaScript Editor works, let\u2019s create a ",(0,o.kt)("strong",{parentName:"p"},"Hello World JS Object"),"."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Navigate to ",(0,o.kt)("strong",{parentName:"li"},"Explorer")," >> Click ",(0,o.kt)("strong",{parentName:"li"},"(+)")," for ",(0,o.kt)("strong",{parentName:"li"},"Queries/JS")," >> Select ",(0,o.kt)("strong",{parentName:"li"},"New JS Object.")),(0,o.kt)("li",{parentName:"ul"},"You\u2019ll see the default code template. Add the below code snippet:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"export default {\n   hello: () => {\n      return \u201cHello World\u201d;\n   }\n}\n")),(0,o.kt)("h3",{id:"response-tab"},"Response Tab"),(0,o.kt)("p",null,"The response tab displays the ",(0,o.kt)("strong",{parentName:"p"},"output")," generated by the functions defined in a JS Object."),(0,o.kt)("h4",{id:"execute-function"},"Execute Function"),(0,o.kt)("p",null,"You can click ",(0,o.kt)("strong",{parentName:"p"},"Run")," available on the top right corner to execute the JS function. If your JS object has only one function defined, the editor defaults the function name. But if your JS Object has more than one function defined, you can select the function you want to execute and then click ",(0,o.kt)("strong",{parentName:"p"},"Run"),"."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Response Tab",src:a(17308).Z,width:"3008",height:"1466"})),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"If your code has syntax errors, the ",(0,o.kt)("strong",{parentName:"p"},"Run")," button is disabled and blocks the execution. You can resolve the errors and then execute the function using ",(0,o.kt)("strong",{parentName:"p"},"Run"),".")),(0,o.kt)("p",null,"You can verify the response generated by the ",(0,o.kt)("inlineCode",{parentName:"p"},"hello()")," in the Response tab, as shown in the screenshot above."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"You can execute the function by clicking the ",(0,o.kt)("strong",{parentName:"p"},"RUN")," button or by using a shortcut key (",(0,o.kt)("strong",{parentName:"p"},"CMD+ENTER")," or ",(0,o.kt)("strong",{parentName:"p"},"CTRL + ENTER"),")")),(0,o.kt)("h3",{id:"linting-errors"},"Linting Errors"),(0,o.kt)("p",null,"The Javascript Editor automatically checks your source code for programmatic errors. If the code is not programmatically correct, it will highlight the error using a red-colored lint below the erroneous code. For example, the syntax error where the ",(0,o.kt)("inlineCode",{parentName:"p"},"return")," is misspelled as ",(0,o.kt)("inlineCode",{parentName:"p"},"retu")," is also captured by linting."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Linting also captures the Syntax error and highlights it with a red line below it.",src:a(76202).Z,width:"2514",height:"1294"})),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"You can inspect the ",(0,o.kt)("inlineCode",{parentName:"p"},"error")," in detail from the ",(0,o.kt)("strong",{parentName:"p"},"Errors")," tab.")),(0,o.kt)("h3",{id:"errors-tab-"},"Errors Tab ",(0,o.kt)("a",{href:"#errors-tab",id:"errors-tab"})),(0,o.kt)("p",null,"The errors tab displays all types of errors generated by the code execution. The errors could be comprised of ",(0,o.kt)("strong",{parentName:"p"},"Syntax Errors"),", ",(0,o.kt)("strong",{parentName:"p"},"Run time errors")," like ",(0,o.kt)("strong",{parentName:"p"},"Parsing Errors"),", and more."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Errors Tab",src:a(83893).Z,width:"2490",height:"1358"})),(0,o.kt)("h3",{id:"logs-tab"},"Logs Tab"),(0,o.kt)("p",null,"The Logs tab shows the execution of functions with a timestamp. You can also open the Logs Tab by clicking a debug icon at the right bottom of the console (as shown in the screenshot below)."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Logs Tab",src:a(3241).Z,width:"2508",height:"1526"})),(0,o.kt)("p",null,"The logs tab gives you the flexibility to filter logs either by writing keywords in the ",(0,o.kt)("strong",{parentName:"p"},"Filter box")," or selecting the ",(0,o.kt)("strong",{parentName:"p"},"type of log")," from the ",(0,o.kt)("strong",{parentName:"p"},"dropdown"),"."),(0,o.kt)("h3",{id:"snippets"},"Snippets"),(0,o.kt)("p",null,"You\u2019ll see a Snippets button available on the right top side of the editor. Click on it to open the Appsmith Snippet Library."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Snippets Button",src:a(85715).Z,width:"2500",height:"262"})),(0,o.kt)("h4",{id:"appsmith-snippet-library"},"Appsmith Snippet Library"),(0,o.kt)("p",null,"You can search and copy the Snippets from the Appsmith Snippet Library and use them in the JavaScript Editor. You can then build on the code snippet to add your code or use it as is."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Appsmith Snippet Library",src:a(81158).Z,width:"1572",height:"1066"})),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Appsmith is actively working on expanding the ",(0,o.kt)("strong",{parentName:"p"},"Snippets Library"),". Please reach out to us on",(0,o.kt)("a",{parentName:"p",href:"https://discord.com/invite/rBTTVJp"}," Discord")," or",(0,o.kt)("a",{parentName:"p",href:"https://community.appsmith.com/"}," Community Forms")," if you wish to contribute to the library.")),(0,o.kt)("h3",{id:"debugger-statements"},"Debugger Statements"),(0,o.kt)("p",null,"The debugger statement in JavaScript will help you pause the code execution during the development phase. The debugger lets you visualize the data and operations when executed on runtime."),(0,o.kt)("p",null,"You\u2019ll have to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"debugger")," keyword in the code snippet to pause the execution."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"You must have the ",(0,o.kt)("strong",{parentName:"p"},"browser\u2019s developer console")," ",(0,o.kt)("strong",{parentName:"p"},"open")," to see the debugger in action.")),(0,o.kt)("object",{data:"https://www.youtube.com/embed/ZjleR7iM-xo?autoplay=0",width:"750px",height:"400px"}),(0,o.kt)("figure",null,(0,o.kt)("object",{data:"https://www.youtube.com/embed/ZjleR7iM-xo?autoplay=0",width:"750px",height:"400px"}),(0,o.kt)("figcaption",{align:"center"},(0,o.kt)("i",null,"How to use Debugger"))),(0,o.kt)("p",null,"For example, you are returning user information fetched from the userDetailsAPI in the JS function, and you want to see the value returned by the API during execution. To get this working, you can use a debugger statement as below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"export default {\n    getUserDetails: async () => {\n        const userInfo = await userDetailsAPI.run();\n        debugger; // the execution will be paused at this point \n        // and you can check the value of the userInfo variable\n        console.log(\u201cuser information: \u201c+userInfo); // the logs will be \n        // printed in the browser \n        // console.\n        return userInfo;\n    }\n}\n")),(0,o.kt)("h2",{id:"writing-complex-code"},"Writing Complex Code"),(0,o.kt)("p",null,"When you build applications, it\u2019s often more than just a CRUD operation from a single datasource. You might integrate with multiple APIs or want to have the dataset created by querying multiple tables, which leads to traversing data, filtering, or manipulating the response by calling different APIs. You can write complex logic with ease using JavaScript Editor."),(0,o.kt)("p",null,"To understand it further, let\u2019s look at a use case and build different workflows."),(0,o.kt)("h3",{id:"use-case"},"Use case"),(0,o.kt)("p",null,"You want to create a developer task tracker dashboard, update developer information, and add some permissions like making sure only admins can access the dashboard."),(0,o.kt)("h4",{id:"code-workflow"},"Code Workflow"),(0,o.kt)("p",null,"Let\u2019s create a task tracker dashboard that gives you an overview of progress on tasks. You have a query called \u201c",(0,o.kt)("em",{parentName:"p"},"developers"),",\u201d which fetches the developers\u2019 information like name, email, etc. You have an API ",(0,o.kt)("inlineCode",{parentName:"p"},"getAllDeveloperTaskStatus")," that gives you a task list with the status for each developer."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Task Tracker")),(0,o.kt)("p",null,"You want to display the developer details in a tabular format so that you can choose a table widget. You would want to show a total number of tasks like total tasks, no of completed tasks, no of to-do tasks, and no of in-progress tasks. You can achieve this by adding a JS Object and creating one function in it, \u201c",(0,o.kt)("em",{parentName:"p"},"getTaskList"),".\u201d Let\u2019s write the code for this function using the JavaScript Editor."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"In the ",(0,o.kt)("strong",{parentName:"li"},"Explorer")," tab, >> click ",(0,o.kt)("strong",{parentName:"li"},"(+)")," next to ",(0,o.kt)("inlineCode",{parentName:"li"},"JS Objects")," >> Select ",(0,o.kt)("inlineCode",{parentName:"li"},"New JS Object"),"."),(0,o.kt)("li",{parentName:"ul"},"It\u2019ll open a JS Editor. Rename the JS Object to ",(0,o.kt)("inlineCode",{parentName:"li"},"Utils")),(0,o.kt)("li",{parentName:"ul"},"Add the below code snippet in the ",(0,o.kt)("strong",{parentName:"li"},"Code")," tab.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'export default {\n    getAllDeveloperTaskStatus: () => {\n    return developers.data.map((developer) => {\n     const developerId = developer.id;\n     const taskList = developerTaskStatus.data.filter((alltask) => alltask.userId === String(developerId)); // fetch all the tasks for the given developer\n     const completedTaskList = taskList.filter((task) => task.status === "Completed"); // fetch tasks that are completed by the developer\n     const todoTaskList = taskList.filter((task) => task.status === "To-Do"); // fetch tasks that are not yet started by the developer\n     const inProgressTaskList = taskList.filter((task) => task.completed === "In-Progress"); // fetch tasks that are in progress by the developer\n     return {\n       "Id": developer.id,\n       "Name": developer.name,\n       "Email": developer.email,\n       "Total Tasks": taskList.length,\n       "To-Do Tasks": todoTaskList.length,\n       "In Progress Tasks": inProgressTaskList.length,\n       "Completed Tasks": completedTaskList.length\n     };\n    })\n }\n}\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"getAllDeveloperTaskStatus")," function does the following:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Reads all the developers\u2019 data"),(0,o.kt)("li",{parentName:"ul"},"Iterates for each developer record",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Scans the tasklist to fetch the developer-related tasks",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Based on task status (TO-DO, In-Progress, and Completed)"))),(0,o.kt)("li",{parentName:"ul"},"Generate a response that gives a cumulative task breakup for each task status for each developer")))),(0,o.kt)("p",null,"To display the response generated by",(0,o.kt)("inlineCode",{parentName:"p"},"getAllDeveloperTaskStatus")," we'll bind it to a widget."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Navigate to ",(0,o.kt)("inlineCode",{parentName:"p"},"Page")," >> Select ",(0,o.kt)("a",{parentName:"p",href:"../../../reference/widgets/table/"},(0,o.kt)("inlineCode",{parentName:"a"},"Table"))," widget in Widgets Tab >> Drag it onto the canvas.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Select the ",(0,o.kt)("inlineCode",{parentName:"p"},"Table")," Widget on the canvas")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"In the ",(0,o.kt)("inlineCode",{parentName:"p"},"Property Pane")," on right side add the code ",(0,o.kt)("inlineCode",{parentName:"p"},"{{Utils.getAllDeveloperTaskStatus()}}")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"Table Data")," property."),(0,o.kt)("object",{data:"https://www.youtube.com/embed/HJGOf5ez4eY?autoplay=0",width:"750px",height:"400px"}))),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"../../../reference/widgets/table/"},"table widget")," will show the data as shown in the below screenshot."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Display data in a table widget",src:a(71958).Z,width:"2504",height:"898"})),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Update Developer Information")),(0,o.kt)("p",null,"Let\u2019s add another function where you\u2019ll be able to select a developer record and update the information."),(0,o.kt)("p",null,"To achieve this, add a new column to the ",(0,o.kt)("a",{parentName:"p",href:"../../../reference/widgets/table/"},"table widget")," and select the ",(0,o.kt)("inlineCode",{parentName:"p"},"Column Type")," as an ",(0,o.kt)("inlineCode",{parentName:"p"},"icon button")," type that will open a modal window."),(0,o.kt)("object",{data:"https://www.youtube.com/embed/H85pm7Ae_U8?autoplay=0",width:"750px",height:"400px"}),(0,o.kt)("p",null,"Now that the ",(0,o.kt)("inlineCode",{parentName:"p"},"Edit")," column is added to the table let\u2019s add a modal to fetch the ",(0,o.kt)("inlineCode",{parentName:"p"},"developer")," information like ",(0,o.kt)("inlineCode",{parentName:"p"},"Name")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Email"),"."),(0,o.kt)("object",{data:"https://www.youtube.com/embed/lqC0MzK4s5g?autoplay=0",width:"750px",height:"400px"}),(0,o.kt)("p",null,"Navigate to Explorer >> Select Utils >> Add the code snippet for ",(0,o.kt)("inlineCode",{parentName:"p"},"updateUserData()")," after ",(0,o.kt)("inlineCode",{parentName:"p"},"getAllDeveloperTaskStatus()"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'export default {\n    getAllDeveloperTaskStatus: () => {\n        ...// code block for getAllDeveloperTaskStatus\n    }, \n    updateUserData: () => {\n        // Construct new user\'s data\n        const newUserData = {\n            ...Table1.selectedRow,\n            name: devName.text,\n            email: devEmail.text,\n        }\n        // Run updateDeveloperDetails query     \n        updateDeveloperDetails.run(\n            // on successful execution of updateDeveloperDetails run developers to fetch updated data \n            async () => {\n                    await developers.run();\n                    closeModal("editModal");\n                    showAlert("Developer Details are updated successfully!");\n                },\n                // On Error, close the modal and show an error toast            \n                (e) => {\n                    closeModal("editModal")\n                    showAlert("An error occurred while updating the developer details!");\n                    if (e.statusCode === 401) {\n                        navigateTo("Page1");\n                    }\n                },\n                // Params Object    \n                newUserData)\n    }\n}\n')),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"updateUserData")," function does the following:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Create the dynamic data that is updated by the user in ",(0,o.kt)("inlineCode",{parentName:"li"},"editModal")," in ",(0,o.kt)("inlineCode",{parentName:"li"},"newUserData")," JSON"),(0,o.kt)("li",{parentName:"ul"},"Executes query ",(0,o.kt)("inlineCode",{parentName:"li"},"updateDeveloperDetails"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"On successful execution of the query:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Calls ",(0,o.kt)("inlineCode",{parentName:"li"},"developers")," query to fetch the updated developer details"),(0,o.kt)("li",{parentName:"ul"},"Shows a success toast to the user"),(0,o.kt)("li",{parentName:"ul"},"Closes the ",(0,o.kt)("inlineCode",{parentName:"li"},"editModal")))),(0,o.kt)("li",{parentName:"ul"},"On error or failed execution of the query",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Shows an error toast to the user"),(0,o.kt)("li",{parentName:"ul"},"Closes the ",(0,o.kt)("inlineCode",{parentName:"li"},"editModal"))))))),(0,o.kt)("p",null,"Rename the ",(0,o.kt)("inlineCode",{parentName:"p"},"Confirm")," button to ",(0,o.kt)("inlineCode",{parentName:"p"},"Update")," and bind the function ",(0,o.kt)("inlineCode",{parentName:"p"},"updateUserData")," to its ",(0,o.kt)("inlineCode",{parentName:"p"},"onClick()")," event. You can bind the function call by using ",(0,o.kt)("inlineCode",{parentName:"p"},"{{Utils.updateUserData()}}"),"."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"How to bind function call to an onClick event?",src:a(1731).Z,width:"2256",height:"1042"})),(0,o.kt)("p",null,"When you'll hit the ",(0,o.kt)("inlineCode",{parentName:"p"},"Update")," button, the ",(0,o.kt)("inlineCode",{parentName:"p"},"updateUserData")," function gets executed that updates the developer information and refreshes the developer table to fetch the updated information."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Add Permissions")),(0,o.kt)("p",null,"As you want only the admins to access the Dashboard, let\u2019s create another function for access control. The function will contain a list of users\u2019 emails who will have access to update data in the table. Let\u2019s call this function ",(0,o.kt)("inlineCode",{parentName:"p"},"isAdmin"),"."),(0,o.kt)("p",null,"Add the code snippet for ",(0,o.kt)("inlineCode",{parentName:"p"},"isAdmin()")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"adminsList")," to the ",(0,o.kt)("inlineCode",{parentName:"p"},"Utils")," JS Object."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'export default {\n    adminsList: ["admin1@yourdomain.com", "admin2@yourdomain.com", "admin3@yourdomain.com"],\n    getAllDeveloperTaskStatus() => {\n        ... // code block for getAllDeveloperTaskStatus\n    },\n    updateUsersData() => {\n        ... // code block for updateUserData\n    },\n    isAdmin: (email) => {\n        if (this.adminList.indexOf(appsmith.user.email) > -1) { // check if the logged in user is an admin\n            return true;\n        }\n        return false;\n    }\n}\n')),(0,o.kt)("p",null,"The final function will look as below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'export default {\n    //the allowed list of admin\'s email\n    adminsList: ["admin1@yourdomain.com", "admin2@yourdomain.com", "admin3@yourdomain.com"],\n    getAllDeveloperTaskStatus: () => {\n        return developers.data.map((developer) => {\n            const developerId = developer.id;\n            const taskList = developerTaskStatus.data.filter((alltask) => alltask.userId === String(developerId)); // fetch all the tasks for the given developer\n            const completedTaskList = taskList.filter((task) => task.status === "Completed"); // fetch tasks that are completed by the developer\n            const todoTaskList = taskList.filter((task) => task.status === "To-Do"); // fetch tasks that are not yet started by the developer\n            const inProgressTaskList = taskList.filter((task) => task.completed === "In-Progress"); // fetch tasks that are in progress by the developer\n            return {\n                "Id": developer.id,\n                "Name": developer.name,\n                "Email": developer.email,\n                "Total Tasks": taskList.length,\n                "To-Do Tasks": todoTaskList.length,\n                "In Progress Tasks": inProgressTaskList.length,\n                "Completed Tasks": completedTaskList.length\n            };\n        })\n    },\n    updateUserData: () => {\n        // Construct new user\'s data\n        const newUserData = {\n            ...Table1.selectedRow,\n            name: devName.text,\n            email: devEmail.text,\n        }\n        // Run updateDeveloperDetails query     \n        updateDeveloperDetails.run(\n            // on successful execution of updateDeveloperDetails run developers to fetch updated data  \n            async () => {\n                    await developers.run();\n                    closeModal("editModal");\n                    showAlert("Developer Details are updated successfully!");\n                },\n                // On Error, close the modal and show an error toast        \n                (e) => {\n                    closeModal("editModal")\n                    showAlert("An error occurred while updating the developer details!");\n                    if (e.statusCode === 401) {\n                        navigateTo("Page1");\n                    }\n                },\n                // Params Object    \n                newUserData)\n\n    },\n    isAdmin: async () => {\n        if (this.adminsList.indexOf(appsmith.user.email) > -1) {\n            return true;\n        }\n        navigateTo("Page2");\n        return false;\n    }\n}\n')),(0,o.kt)("object",{data:"https://www.youtube.com/embed/cuoUVqzhCMo?autoplay=0",width:"750px",height:"400px"}),(0,o.kt)("p",null,"Only the users with email added to the ",(0,o.kt)("inlineCode",{parentName:"p"},"adminList")," will be able to access the dashboard and do the updates."),(0,o.kt)("p",null,"With the ",(0,o.kt)("a",{parentName:"p",href:"/core-concepts/writing-code/javascript-editor-beta/asynchronous-javascript-function-settings"},"Async function settings"),", you can bind the ",(0,o.kt)("inlineCode",{parentName:"p"},"isAdmin")," function to ",(0,o.kt)("inlineCode",{parentName:"p"},"RUN ON PAGE LOAD"),". The execution of ",(0,o.kt)("inlineCode",{parentName:"p"},"IsAdmin")," on Page load ensures the validation of the user\u2019s email against the ",(0,o.kt)("inlineCode",{parentName:"p"},"adminList")," for the logged-in user should happen on the page load. If the logged-in user's email is present in the ",(0,o.kt)("inlineCode",{parentName:"p"},"adminsList"),", the user can access the Dashboard. If not, the user navigates to the access denied page that shows a message:"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"You do not have permission to access the Dashboard.")),(0,o.kt)("h2",{id:"current-limitations"},"Current Limitations"),(0,o.kt)("p",null,"As the JavaScript Editor is in its BETA, there are a few limitations:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"At the moment, you cannot use ",(0,o.kt)("inlineCode",{parentName:"li"},"JS Objects")," across pages. We are working to enable this functionality in the future. You can subscribe to",(0,o.kt)("a",{parentName:"li",href:"https://github.com/appsmithorg/appsmith/issues/1751"}," the issue")," and follow the progress."),(0,o.kt)("li",{parentName:"ul"},"You cannot define variables and functions outside of export default { }. In future iterations, we will allow you to write and export only selected variables/functions from a ",(0,o.kt)("inlineCode",{parentName:"li"},"JS Object"),".")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Async Function",src:a(38444).Z,width:"512",height:"334"})),(0,o.kt)("p",null,"If a function is async, i.e., if it returns a promise, it cannot be called on the fields incompatible with the return type, such as the default text property of the ",(0,o.kt)("a",{parentName:"p",href:"/reference/widgets/text"},"text")," widget. For example, in the above screenshot ",(0,o.kt)("inlineCode",{parentName:"p"},"executeQuery")," returns ",(0,o.kt)("inlineCode",{parentName:"p"},"Api1.run()")," promise and hence is an ",(0,o.kt)("a",{parentName:"p",href:"./#asynchronous"},"async function"),". You can call ",(0,o.kt)("inlineCode",{parentName:"p"},"executeQuery")," or similar functions only from ",(0,o.kt)("inlineCode",{parentName:"p"},"trigger")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"event")," properties such as ",(0,o.kt)("inlineCode",{parentName:"p"},"OnClick"),"."))}c.isMDXComponent=!0},38444:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/JS_editor_async_function-0a80a6b89ba5862904e4d7cf6d1b09c6.png"},1731:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/JavaScript_Editor__Edit_Modal__Bind_UpdateUser_Function_Call_on_Update_Button-b5d07e19f20a820891cf615dd19a58e9.png"},83893:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/JavaScript_Editor__Error_Tab-d1521301e8fee336ed46e3f35c7589ed.png"},76202:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/JavaScript_Editor__Linting_Errors-65e09ec0a2677f092195b4eaa105924a.png"},3241:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/JavaScript_Editor__Logs_Tab-55eda51e1f7aef43816b367da8cac82f.png"},13104:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/JavaScript_Editor__New_JS_Object-1f2fa4590005410fd50df382b907d29f.png"},17308:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/JavaScript_Editor__Response_Tab-c6645b49fcc3a6467b45793536ad832f.png"},85715:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/JavaScript_Editor__Snippets-bd53f96db7a3b7e1f613694a2b17beaf.png"},81158:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/JavaScript_Editor__Snippets__Appsmith_Snippet_Library-2fc528b884f484e19f511da59fd8992c.png"},71958:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/JavaScript_Editor__Write_Complex_Code__Bind_JS_Function_Response_to_Table_Widget-c58e5766b5010a495c66660ec12e6276.png"},90596:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/call_JS_object-14c7623c117c761fe81ec7385f225388.png"}}]);