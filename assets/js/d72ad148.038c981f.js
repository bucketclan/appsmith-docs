"use strict";(self.webpackChunkappsmith_docs=self.webpackChunkappsmith_docs||[]).push([[517],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,o=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(a),h=i,m=c["".concat(d,".").concat(h)]||c[h]||u[h]||o;return a?n.createElement(m,r(r({ref:t},p),{},{components:a})):n.createElement(m,r({ref:t},p))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=a.length,r=new Array(o);r[0]=c;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var s=2;s<o;s++)r[s]=a[s];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},39905:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=a(87462),i=(a(67294),a(3905));const o={},r="List",l={unversionedId:"reference/widgets/list",id:"reference/widgets/list",title:"List",description:"You can use a list widget to display structured data collection. For example, You have a dataset of employees with each entity having properties like name, designation, department, etc. You can use a list widget to iterate over the employee collection and display the data one after the other. The list widget allows you to supply this dataset and takes care of the iteration without writing any code.",source:"@site/docs/reference/widgets/list.md",sourceDirName:"reference/widgets",slug:"/reference/widgets/list",permalink:"/reference/widgets/list",draft:!1,editUrl:"https://github.com/bucketclan/appsmith-docs/blob/v1.5/website/docs/reference/widgets/list.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"JSON Form",permalink:"/reference/widgets/json-form"},next:{title:"Maps",permalink:"/reference/widgets/maps"}},d={},s=[{value:"Usage",id:"usage",level:2},{value:"Add to Canvas",id:"add-to-canvas",level:2},{value:"Components",id:"components",level:2},{value:"Properties",id:"properties",level:2},{value:"Widget Properties",id:"widget-properties",level:3},{value:"Name of Widget",id:"name-of-widget",level:4},{value:"Items",id:"items",level:4},{value:"Connect Data",id:"connect-data",level:4},{value:"Explorer Tab",id:"explorer-tab",level:4},{value:"Data Mapping",id:"data-mapping",level:4},{value:"Server Side Pagination",id:"server-side-pagination",level:4},{value:"Visible",id:"visible",level:4},{value:"Binding Properties",id:"binding-properties",level:3},{value:"Events",id:"events",level:3},{value:"onListItemClick",id:"onlistitemclick",level:4},{value:"Styles",id:"styles",level:3},{value:"Background Color",id:"background-color",level:4},{value:"Item Background Color",id:"item-background-color",level:4},{value:"Item Spacing",id:"item-spacing",level:4},{value:"Border Radius",id:"border-radius",level:4},{value:"Box Shadow",id:"box-shadow",level:4}],p={toc:s};function u(e){let{components:t,...o}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"list"},"List"),(0,i.kt)("p",null,"You can use a list widget to display structured data collection. For example, You have a dataset of employees with each entity having properties like name, designation, department, etc. You can use a list widget to iterate over the employee collection and display the data one after the other. The list widget allows you to supply this dataset and takes care of the iteration without writing any code."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"List widget is in beta right now. It can only render widgets for display purposes like text, images, etc., in the template, but we plan to offer more features in the future.")),(0,i.kt)("figure",null,(0,i.kt)("object",{data:"https://www.youtube.com/embed/0ePiZlWmp7Q?autoplay=0",width:"750px",height:"400px"}),(0,i.kt)("figcaption",{align:"center"},(0,i.kt)("i",null,"How to use List Widget"))),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,"List widget provides you with out-of-the-box functionality to iterate over a structured data collection. The datasets can be static or generated by the response from API/queries."),(0,i.kt)("p",null,"A list widget will help you better visualize your content. You can use rich content to display in a list widget like you can add images, text, buttons, audio, and more."),(0,i.kt)("p",null,"Below are some use cases where a list widget could help display data:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Display information about your business, such as customer reviews, purchase orders, store locations, etc."),(0,i.kt)("li",{parentName:"ul"},"You can show book details like title, cover image, genre, author, publication date, and price."),(0,i.kt)("li",{parentName:"ul"},"Display employees' information. You can keep track of employee history, birthdays, and more.")),(0,i.kt)("p",null,"These were just a few examples, and you can do several things with the list widget. The image below depicts how employee data will appear in the list widget: an employee's picture, personal details (email, date of birth), employee ID, department, city, and a button ",(0,i.kt)("inlineCode",{parentName:"p"},"View Details")," that displays more details like the date of joining, address, and account details."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"A simulation to display an employee&#39;s information using a list widget",src:a(33947).Z,width:"1641",height:"948"})),(0,i.kt)("h2",{id:"add-to-canvas"},"Add to Canvas"),(0,i.kt)("p",null,"To add a list widget to your canvas, drag a list widget from a widget pane available on the left navigation bar."),(0,i.kt)("p",null,"Navigate to PAGES \u2014> Select Widget Tab \u2014> Write \u201c",(0,i.kt)("strong",{parentName:"p"},"list\u201d")," in the search bar \u2014> Drag the widget on the canvas."),(0,i.kt)("figure",null,(0,i.kt)("object",{data:"https://www.youtube.com/embed/8LWM10svhZU?autoplay=0",width:"750px",height:"400px"}),(0,i.kt)("figcaption",{align:"center"},(0,i.kt)("i",null,"Add a widget to Canvas"))),(0,i.kt)("p",null,"Now that you have a list widget added to the canvas, you can move it anywhere on the canvas by simply dragging the widget."),(0,i.kt)("h2",{id:"components"},"Components"),(0,i.kt)("p",null,"Typically, a list widget is a collection of other widgets that you can embed to display data. Once you drag the list widget on the canvas, you can see it has embedded widgets like an",(0,i.kt)("a",{parentName:"p",href:"/reference/widgets/image"}," image")," and two",(0,i.kt)("a",{parentName:"p",href:"/reference/widgets/text"}," texts")," available."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Child widgets embedded in a list widget",src:a(61953).Z,width:"1584",height:"1142"})),(0,i.kt)("p",null,"For example, you are building an employee directory and want to display the name, image, designation, and department. You can use the below components to display the employee data in a list widget:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Text widget - to display employee name."),(0,i.kt)("li",{parentName:"ul"},"Image widget - to show employee\u2019s picture."),(0,i.kt)("li",{parentName:"ul"},"Text widget - to populate designation."),(0,i.kt)("li",{parentName:"ul"},"Text widget - to display department.")),(0,i.kt)("p",null,"So, your list widget will be a collection of three text widgets and one image widget."),(0,i.kt)("p",null,"The platform provides a list widget with an embedded image and two text widgets. You can add more widgets as per your requirement."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"In the beta version of the List widget, you can only use widgets to display the data like images, text, and more. However, the widgets that need users to provide inputs like text box, checkbox, and more, are not available in beta but will be added as part of future releases.")),(0,i.kt)("p",null,"To add more widgets to your list, navigate to the left bar under ",(0,i.kt)("strong",{parentName:"p"},"PAGES"),", click on the ",(0,i.kt)("strong",{parentName:"p"},"Widget")," tab, and search for a widget like ",(0,i.kt)("strong",{parentName:"p"},"Text"),". ",(0,i.kt)("strong",{parentName:"p"},"Drag")," the widget on the first item for the list in the widget."),(0,i.kt)("p",null,(0,i.kt)("img",{src:a(72079).Z,width:"1366",height:"840"})),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Add the widgets only on the first item container in the list. The widgets will be replicated for the other items whenever the data renders automatically. We\u2019ll learn more about how the embedded widgets replicate on a dataset in the subsequent section below.")),(0,i.kt)("p",null,"The next thing you would like to do is set up some data for the list widget. You can do that by configuring properties for the widget."),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("p",null,"Properties allow you to edit the widget, connect it with other widgets and customize the user actions."),(0,i.kt)("h3",{id:"widget-properties"},"Widget Properties"),(0,i.kt)("p",null,"These properties allow you to name, edit the List widget."),(0,i.kt)("h4",{id:"name-of-widget"},"Name of Widget"),(0,i.kt)("p",null,"You can see a textbox available at the top of the Properties pane. List1 is the default name given to a list widget added to the canvas. The number ",(0,i.kt)("inlineCode",{parentName:"p"},"{1}")," in List1 is a running sequence. If you add more list widgets, the names of the subsequent list widgets could be like List2, List3, and more."),(0,i.kt)("figure",null,(0,i.kt)("object",{data:"https://www.youtube.com/embed/WqSrZphpZv4?autoplay=0",width:"750px",height:"400px"}),(0,i.kt)("figcaption",{align:"center"},(0,i.kt)("i",null,"How to name a list widget?"))),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"It\u2019s advisable to rename the widget to give some meaningful name. It makes it easy to pass parameters by using the widget name to the APIs or queries.")),(0,i.kt)("p",null,"All of these properties are present in the property pane of the widget. The following table lists all the widget properties."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Items")),(0,i.kt)("td",{parentName:"tr",align:null},"Allows you to bind static or dynamic data collection to the widget.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Server-side Pagination")),(0,i.kt)("td",{parentName:"tr",align:null},"Enables you to implement pagination by limiting the number of results fetched per API / Query request. ",(0,i.kt)("a",{parentName:"td",href:"/core-concepts/data-access-and-binding/displaying-data-read/display-data-tables#pagination"},"See here")," for more information on pagination.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Visible")),(0,i.kt)("td",{parentName:"tr",align:null},"Controls widget's visibility on the page. When turned off: The widget will not be visible when the app is published. It appears translucent when in Edit mode.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Animate Loading")),(0,i.kt)("td",{parentName:"tr",align:null},"When turned off, the widget will load without any skeletal animation. You can use a toggle switch to turn it on/off. You can also turn it off/on using javascript by enabling the JS label next to it.")))),(0,i.kt)("h4",{id:"items"},"Items"),(0,i.kt)("p",null,"Items are used to bind your dataset with the list widget. Either you want to iterate over static or dynamic data generated by executing a database Query/API call."),(0,i.kt)("p",null,"To have a dynamic data binding for the list widget, you can use the ",(0,i.kt)("strong",{parentName:"p"},"Connect Data")," button on the right bar or choose the Queries/API/JS functions from the left navigation bar available under the ",(0,i.kt)("strong",{parentName:"p"},"Explorer")," tab."),(0,i.kt)("figure",null,(0,i.kt)("object",{data:"https://www.youtube.com/embed/PPsqqkaq_7Q?autoplay=0",width:"750px",height:"400px"}),(0,i.kt)("figcaption",{align:"center"},(0,i.kt)("i",null,"How to add Data to Widget?"))),(0,i.kt)("h4",{id:"connect-data"},"Connect Data"),(0,i.kt)("p",null,"When you click on the ",(0,i.kt)("strong",{parentName:"p"},"Connect Data")," button, it navigates to the DataSources page, where you can either add new datasources or choose existing datasources. On the datasources page, once you have selected the datasource, you can either add queries or select available queries to bind the response to the list widget.",(0,i.kt)("a",{parentName:"p",href:"../../core-concepts/connecting-to-data-sources/"}," Read more to add different datasources and create queries.")),(0,i.kt)("h4",{id:"explorer-tab"},"Explorer Tab"),(0,i.kt)("p",null,"On the ",(0,i.kt)("strong",{parentName:"p"},"Explorer")," tab, you\u2019ll have options to choose from Queries to Javascript(JS) functions to datasources and queries. Choose one of the options that would enable you to add data to the list widget."),(0,i.kt)("h4",{id:"data-mapping"},"Data Mapping"),(0,i.kt)("p",null,"You can see a box displaying the static JSON data. You can replace the static JSON in the items pane or bind the query/API/JS response, and the list widget will use the data for generating the items."),(0,i.kt)("p",null,"If you wish to bind the dynamic response of the queries/API, then you can use mustache syntax (",(0,i.kt)("inlineCode",{parentName:"p"},"{{ }}"),") to embed the same. For example, You have written a query ",(0,i.kt)("inlineCode",{parentName:"p"},"\u201cGetAllEmployees\u201d")," then to bind the response use ",(0,i.kt)("inlineCode",{parentName:"p"},"{{GetAllEmployees.data}}"),". Typically, you will have a format of ",(0,i.kt)("inlineCode",{parentName:"p"},"{{QUERY_NAME.data}}")," to bind the data returned by the query."),(0,i.kt)("p",null,"To better understand how to bind data to a list widget, let\u2019s take an example of static Javascript Object Notation (JSON)."),(0,i.kt)("p",null,"You\u2019ll see that in the JSON snippet below, there is a collection of books with details like ",(0,i.kt)("inlineCode",{parentName:"p"},"bookId"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"bookName"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"bookImage"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"category"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"author"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"publishedDate"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"price"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'[\n\n  {\n\n    "bookId": "001",\n\n    "bookName": "Artificial Intelligence for Business Leaders",\n\n    "bookImage": "https://m.media-amazon.com/images/I/511Y1LSr0JL.jpg",\n\n    "category":"Computing, Internet & Digital Media",\n\n    "author" :"Ajit K Jha",\n\n    "publishedDate": "22-July-2020",\n\n    "price": "INR 599"\n\n  },\n\n  {\n\n    "bookId": "002",\n\n    "bookName": "Bootstrap 4 Quick Start",\n\n    "bookImage": "https://images-na.ssl-images-amazon.com/images/I/41GTBaVKAyL._SX404_BO1,204,203,200_.jpg",\n\n    "category":"Computing, Internet & Digital Media",\n\n    "author" :"Jacob Lett",\n\n    "publishedDate": "20-March-2018",\n\n    "price": "INR 439.90\u201d\n\n }\n\n]\n')),(0,i.kt)("p",null,"Replace the above JSON snippet in the items pane. To display the data in the list widget, you\u2019ll need five text widgets and one image widget. Drag and drop these widgets on the canvas, and remember to add the widgets on the ",(0,i.kt)("strong",{parentName:"p"},"first item")," of the list widget. You\u2019ll see that the items will simulate iteration so that you can visualize iterated data."),(0,i.kt)("p",null,"Let\u2019s bind each JSON field to the widgets embedded in the list widget. You can follow similar steps to bind the data for other widgets:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Select the Image widget."),(0,i.kt)("li",{parentName:"ul"},"In the right bar for General Properties, input the code snippet ",(0,i.kt)("inlineCode",{parentName:"li"},"{{currentItem.bookImage}}"),". Please note that ",(0,i.kt)("inlineCode",{parentName:"li"},"currentItem")," refers to the item read from the data collection. It is similar to the iterator reference of the collection you would be iterating over in the code. ",(0,i.kt)("inlineCode",{parentName:"li"},"bookImage")," is the JSON attribute in the above code snippet."),(0,i.kt)("li",{parentName:"ul"},"You will see that the image is now displayed, as the image widget renders the image available on the URL supplied in JSON.")),(0,i.kt)("p",null,"Similarly, you can bind bookName, category, author, publishedDate, and price to the embedded widgets in the list widget. Once you link the data, you can see that the list widget will display the data for the JSON."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"If you are binding the dynamic response of your query or API to the list widget, remember to use the query columns or API response object\u2019s attributes to map to the individual widget by using ",(0,i.kt)("inlineCode",{parentName:"p"},"currentItem.<attribute_or_column_name>"),".")),(0,i.kt)("h4",{id:"server-side-pagination"},"Server Side Pagination"),(0,i.kt)("p",null,"You can use server-side pagination when a client receives only a subset of data from large datasets. It allows you to define the data limit that a Query or an API call can render. Thus, allowing you to paginate the data and determine the pagination boundaries.",(0,i.kt)("a",{parentName:"p",href:"/core-concepts/data-access-and-binding/displaying-data-read/display-data-tables"}," Read more on server-side pagination to paginate your large data sets"),"."),(0,i.kt)("h4",{id:"visible"},"Visible"),(0,i.kt)("p",null,"You can use Visible to show or hide the widget. By default, visible is ",(0,i.kt)("strong",{parentName:"p"},"on")," that is enabled, so the widget is visible on page load. This property particularly comes in handy when you want to ",(0,i.kt)("strong",{parentName:"p"},"hide/show")," a widget programmatically or hide a widget on page load and then show it when a particular condition or data is available."),(0,i.kt)("p",null,"There are two ways in which you can manipulate this property."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Enable the JS label next to Visible and write the javascript code that can handle the show and hide of the widget by manipulating visible property."),(0,i.kt)("li",{parentName:"ul"},"Write your own JS object and javascript code to link to any other widget and manage the show/hide.")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"You can get the reference of visible property by using ",(0,i.kt)("inlineCode",{parentName:"p"},"{{widget_name.isVisible}}")," in your code.")),(0,i.kt)("p",null,"For example, let\u2019s drag a checkbox widget ",(0,i.kt)("inlineCode",{parentName:"p"},"Checkbox1")," onto the canvas and bind it to the ",(0,i.kt)("inlineCode",{parentName:"p"},"Visible")," property of the list widget by enabling the JS label next to it, add the following JavaScript code in the ",(0,i.kt)("inlineCode",{parentName:"p"},"Visible")," property of the list widget."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"{{Checkbox1.isChecked}}\n")),(0,i.kt)("p",null,"When you check the checkbox, it will enable the Visible property, and shows the list widget. Whereas the uncheck on the checkbox will hide the widget."),(0,i.kt)("figure",null,(0,i.kt)("object",{data:"https://www.youtube.com/embed/iJICPdtoUQc?autoplay=0",width:"750px",height:"400px"}),(0,i.kt)("figcaption",{align:"center"},(0,i.kt)("i",null,"Visible"))),(0,i.kt)("h3",{id:"binding-properties"},"Binding Properties"),(0,i.kt)("p",null,"These properties allow you to bind your List widget with any other widget in queries or JS objects. The following table lists all the binding properties."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Binding Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"backgroundColor")),(0,i.kt)("td",{parentName:"tr",align:null},"Represents the widget's ",(0,i.kt)("strong",{parentName:"td"},"Background Color")," setting as a CSS ",(0,i.kt)("inlineCode",{parentName:"td"},"color")," value ",(0,i.kt)("em",{parentName:"td"},"(string)"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"gridGap")),(0,i.kt)("td",{parentName:"tr",align:null},"Reflects the widget's ",(0,i.kt)("strong",{parentName:"td"},"Item Spacing")," property ",(0,i.kt)("em",{parentName:"td"},"(number)"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"isVisible")),(0,i.kt)("td",{parentName:"tr",align:null},"Reflects the state of the widget's ",(0,i.kt)("strong",{parentName:"td"},"Visible")," setting ",(0,i.kt)("em",{parentName:"td"},"(bool)"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"items")),(0,i.kt)("td",{parentName:"tr",align:null},"Contains an ",(0,i.kt)("em",{parentName:"td"},"array")," of ",(0,i.kt)("em",{parentName:"td"},"objects")," that each represent a widget within the list items, and holds information about that widget's state.",(0,i.kt)("br",null),"e.g. ",(0,i.kt)("inlineCode",{parentName:"td"},'[ { "Text1": { "isVisible": true, ... }, ... }, ... ]'))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"listData")),(0,i.kt)("td",{parentName:"tr",align:null},"Contains an ",(0,i.kt)("em",{parentName:"td"},"array")," of ",(0,i.kt)("em",{parentName:"td"},"objects")," that each represent a list item and its data.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"pageNo")),(0,i.kt)("td",{parentName:"tr",align:null},"Contains a ",(0,i.kt)("em",{parentName:"td"},"number")," representing which page of the list is currently being displayed.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"pageSize")),(0,i.kt)("td",{parentName:"tr",align:null},"Contains a ",(0,i.kt)("em",{parentName:"td"},"number")," representing the number of list items that can fit on one page of the List widget.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"selectedItem")),(0,i.kt)("td",{parentName:"tr",align:null},"Contains an ",(0,i.kt)("em",{parentName:"td"},"object")," representing the data of the list item that is selected.")))),(0,i.kt)("h3",{id:"events"},"Events"),(0,i.kt)("p",null,"You can define functions that will be called when these events are triggered in the widget."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Event"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"onListItemClick")),(0,i.kt)("td",{parentName:"tr",align:null},"Sets an action to take place when the user clicks on one of the list items. Can be set from the GUI list of common actions (",(0,i.kt)("a",{parentName:"td",href:"../appsmith-framework/widget-actions/"},"examples here"),"), or you can define a custom JavaScript function to call instead.")))),(0,i.kt)("h4",{id:"onlistitemclick"},"onListItemClick"),(0,i.kt)("p",null,"For a list widget, the event onListItemClick is fired whenever a user clicks or selects an item on the list. You can perform many",(0,i.kt)("a",{parentName:"p",href:"../appsmith-framework/widget-actions/"}," supported actions")," on a list item click."),(0,i.kt)("p",null,"For example, show a message whenever a user clicks on a list item."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"An individual item on the list is defined as the entire row. A row includes the widgets embedded into it. You can get the values of embedded widgets for the selected or clicked item in your code to perform various operations.")),(0,i.kt)("figure",null,(0,i.kt)("object",{data:"https://www.youtube.com/embed/_h3hUjnGwSE?autoplay=0",width:"750px",height:"400px"}),(0,i.kt)("figcaption",{align:"center"},(0,i.kt)("i",null,"onListItemClick"))),(0,i.kt)("h3",{id:"styles"},"Styles"),(0,i.kt)("p",null,"You can do some formatting changes to enhance the look and feel of the widget by using styles."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Style Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Background Color")),(0,i.kt)("td",{parentName:"tr",align:null},"Sets the background color of the widget. Accepts  CSS ",(0,i.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/color"},(0,i.kt)("inlineCode",{parentName:"a"},"color")," "),"values.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Item Background Color")),(0,i.kt)("td",{parentName:"tr",align:null},"Sets the background color of the list item cards. Accepts  CSS ",(0,i.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/color"},(0,i.kt)("inlineCode",{parentName:"a"},"color")," "),"values.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Item Spacing")),(0,i.kt)("td",{parentName:"tr",align:null},"Sets the width in pixels of the gap between list item cards. Accepts ",(0,i.kt)("em",{parentName:"td"},"number")," values.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Border Radius")),(0,i.kt)("td",{parentName:"tr",align:null},"Rounds the corners of the widget's outer edge. With JS enabled, this accepts valid CSS ",(0,i.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius"},(0,i.kt)("inlineCode",{parentName:"a"},"border-radius"))," values.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Box Shadow")),(0,i.kt)("td",{parentName:"tr",align:null},"Casts a drop shadow from the frame of the widget. With JS enabled, this accepts valid CSS ",(0,i.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/box-shadow"},(0,i.kt)("inlineCode",{parentName:"a"},"box-shadow"))," values.")))),(0,i.kt)("h4",{id:"background-color"},"Background Color"),(0,i.kt)("p",null,"You can use the property background color to change the widget\u2019s background. You can select the available colors from the color pallet to change the background color."),(0,i.kt)("h4",{id:"item-background-color"},"Item Background Color"),(0,i.kt)("p",null,"Like Background color, you can select the available colors from the pallet to change the item\u2019s background color for your widget."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"How to set background/item background color for a list widget?",src:a(8206).Z,width:"1008",height:"288"})),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"To change the background/item background color by using HTML Color codes, click the JS label next to Background Color/ Item Background Color label and supply the HTML Color code in the box below.")),(0,i.kt)("h4",{id:"item-spacing"},"Item Spacing"),(0,i.kt)("p",null,"You can use item spacing to add the padding to the list cells. Padding will ensure that you have some space included between the adjacent cells of the widget. Item spacing uses Pixels(px) as a unit. You can supply a number like 5 to the item spacing that adds the padding of 5px to the list cells."),(0,i.kt)("h4",{id:"border-radius"},"Border Radius"),(0,i.kt)("p",null,"You can use the border radius style to curve the edges of list widget. You can select one of the available option to choose the border radius."),(0,i.kt)("h4",{id:"box-shadow"},"Box Shadow"),(0,i.kt)("p",null,"You can use the box shadow style to cast a drop shadow of list widget. You can select one of the available option to choose the box shadow."),(0,i.kt)("p",null,"Take advantage of using the list widget to display your datasets and visualize your content in a better way."))}u.isMDXComponent=!0},72079:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/List-Widget-Add-widgets-to-first-item_(1)-e04f54a479995d338194223e254269f9.png"},8206:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/List-Widget-Background-Item-Background-Color-15b16238ef130b268c96aec45d0a2a81.png"},61953:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/List-Widget-Embedded-Widgets-e7a67da7b6218d38ffc2147b7c783c84.png"},33947:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/employedatass1-62b158da463a93f417a6dbf6ca767009.PNG"}}]);