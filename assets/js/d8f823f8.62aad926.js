"use strict";(self.webpackChunkappsmith_docs=self.webpackChunkappsmith_docs||[]).push([[3949],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(n),h=i,m=p["".concat(c,".").concat(h)]||p[h]||u[h]||r;return n?a.createElement(m,o(o({ref:t},d),{},{components:n})):a.createElement(m,o({ref:t},d))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var l=2;l<r;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},68171:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var a=n(87462),i=(n(67294),n(3905));const r={sidebar_position:5},o="Elasticsearch",s={unversionedId:"reference/datasources/querying-elasticsearch",id:"reference/datasources/querying-elasticsearch",title:"Elasticsearch",description:"The following document assumes that you understand the basics of connecting to databases on Appsmith. If not, please go over them before reading further.",source:"@site/docs/reference/datasources/querying-elasticsearch.md",sourceDirName:"reference/datasources",slug:"/reference/datasources/querying-elasticsearch",permalink:"/appsmith-docs/reference/datasources/querying-elasticsearch",draft:!1,editUrl:"https://github.com/bucketclan/appsmith-docs/blob/v1.5/website/docs/reference/datasources/querying-elasticsearch.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"DynamoDB",permalink:"/appsmith-docs/reference/datasources/querying-dynamodb"},next:{title:"Firestore",permalink:"/appsmith-docs/reference/datasources/querying-firestore"}},c={},l=[{value:"Connection Settings",id:"connection-settings",level:2},{value:"Querying Elasticsearch",id:"querying-elasticsearch",level:2},{value:"Creating a single document",id:"creating-a-single-document",level:3},{value:"Creating multiple documents",id:"creating-multiple-documents",level:3},{value:"Retrieving a single document",id:"retrieving-a-single-document",level:3},{value:"Searching through documents",id:"searching-through-documents",level:3},{value:"Deleting a document",id:"deleting-a-document",level:3},{value:"Using Queries in applications",id:"using-queries-in-applications",level:2}],d={toc:l};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"elasticsearch"},"Elasticsearch"),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"The following document assumes that you understand the ",(0,i.kt)("a",{parentName:"p",href:"/appsmith-docs/core-concepts/connecting-to-data-sources/connecting-to-databases#connecting-to-a-database"},"basics of connecting to databases on Appsmith"),". If not, please go over them before reading further.")),(0,i.kt)("h2",{id:"connection-settings"},"Connection Settings"),(0,i.kt)("p",null,"The Elasticsearch plugin requires two pieces of information to establish a connection."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Click to expand",src:n(22123).Z,width:"2164",height:"1214"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Host Address / Port","*",":")," Fill in the elasticsearch instance's address and port. This field supports multiple endpoints if that be the need."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Username / Password:")," The authentication detail for the elastic search instance. The password for your datasource is encrypted when it is stored within the Appsmith database."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Authorization Header:")," In case you choose to connect to your instance with another mechanism, you can use the ",(0,i.kt)("inlineCode",{parentName:"li"},"Authorization Header")," field. This field is only considered when the ",(0,i.kt)("inlineCode",{parentName:"li"},"Username")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"Password")," fields are empty.")),(0,i.kt)("p",null,'After filling up the fields as described above, click on the "Test" button to verify the configuration and click "Save".'),(0,i.kt)("h2",{id:"querying-elasticsearch"},"Querying Elasticsearch"),(0,i.kt)("p",null,"Elasticsearch support a rich set of ",(0,i.kt)("a",{parentName:"p",href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/rest-apis.html"},"REST APIs")," that can be accessed using the Elasticsearch plugin in Appsmith. The plugin itself supports all requests that would use the ",(0,i.kt)("inlineCode",{parentName:"p"},"GET"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"POST"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"PUT"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"DELETE")," HTTP methods. These APIs support single as well as bulk queries, some of which are demonstrated below. Do note the leading ",(0,i.kt)("inlineCode",{parentName:"p"},"/")," that needs to be added for each of these requests."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"While Elasticsearch has a comprehensive reference list for its APIs, please make sure that you refer to specific documentation by your provider for requests that may or may not be applicable.")),(0,i.kt)("h3",{id:"creating-a-single-document"},"Creating a single document"),(0,i.kt)("p",null,"As part of the Document API, you can create a single new document by using the POST URI ",(0,i.kt)("inlineCode",{parentName:"p"},"/{index}/_doc/{id}")," with a JSON body that represents the document. For instance, the following request will create a document in the ",(0,i.kt)("inlineCode",{parentName:"p"},"movies")," index with an ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," of 1."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'Path: /movies/_doc/1\nBody:\n{\n    "title": "Castle in the Sky",\n    "director": "Hayao Miyazaki",\n    "producer": "Isao Takahata",\n    "release_date": "1986",\n    "rt_score": "95"\n}\n')),(0,i.kt)("h3",{id:"creating-multiple-documents"},"Creating multiple documents"),(0,i.kt)("p",null,"Bulk additions can be done using the POST endpoint ",(0,i.kt)("inlineCode",{parentName:"p"},"/_bulk"),", with a request body that specifies the index for each document separately as shown below. The following request will add 4 more documents in addition to the single indexed document we added in the previous request."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'Path: /_bulk\nBody:\n{"index": {"_index": "movies", "_id": "2"}}\n{"title":"Grave of the Fireflies", "director":"Isao Takahata", "producer":"Toru Hara", "release_date":"1988", "rt_score":"97"}\n{"index": {"_index": "movies", "_id": "3"}}\n{"title": "My Neighbor Totoro", "director": "Hayao Miyazaki", "producer": "Hayao Miyazaki", "release_date": "1988", "rt_score": "93"}\n{"index": {"_index": "movies", "_id": "4"}}\n{"title": "Kiki\'s Delivery Service", "director": "Hayao Miyazaki", "producer": "Hayao Miyazaki", "release_date": "1989", "rt_score": "96"}\n{"index": {"_index": "movies", "_id": "5"}}\n{"title": "Only Yesterday", "director": "Isao Takahata", "producer": "Toshio Suzuki", "release_date": "1991", "rt_score": "100"}\n')),(0,i.kt)("h3",{id:"retrieving-a-single-document"},"Retrieving a single document"),(0,i.kt)("p",null,"A single document can be accessed using it ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," within an index using a GET request that has the following path:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Path: /movies/_doc/2\n")),(0,i.kt)("h3",{id:"searching-through-documents"},"Searching through documents"),(0,i.kt)("p",null,"Queries run on top of indexed documents can be configured using the GET method, without a JSON body. The following search query scans through the ",(0,i.kt)("inlineCode",{parentName:"p"},"movies")," index created previously to return documents that match the query string."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Path: /movies/_search?q=Hayao%20Miyazaki\n")),(0,i.kt)("h3",{id:"deleting-a-document"},"Deleting a document"),(0,i.kt)("p",null,"Deleting documents only requires a reference to the relevant ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," field that is sent across in a DELETE request. The request below will return with the deleted resource if it exists."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Path: /movies/_doc/5\n")),(0,i.kt)("h2",{id:"using-queries-in-applications"},"Using Queries in applications"),(0,i.kt)("p",null,"Once you have successfully run a Query, you can use it in your application to"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/core-concepts/data-access-and-binding/displaying-data-read/"},"Display Data")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/core-concepts/data-access-and-binding/capturing-data-write/"},"Capture Data"))))}u.isMDXComponent=!0},22123:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/elasticsearch-datasource-form-2bf186257006bcc6ac4252feea4144c0.png"}}]);